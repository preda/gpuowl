name: CI

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 1 * *'

jobs:
  Linux:
    name: Linux

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        cxx: [g++, clang++]
      fail-fast: false
    env:
      CXX: ${{ matrix.cxx }}
    steps:
    - uses: actions/checkout@v4
    - name: Install
      run: |
        sudo apt-get update -y
        sudo apt-get install -y cppcheck ocl-icd-opencl-dev pocl-opencl-icd
        $CXX --version
    - name: Script
      run: |
        make prpll -O -j "$(nproc)"
        cd build-release
        rm -f -- *.o
        ./prpll -h
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ${{ matrix.os }}_${{ matrix.cxx }}_prpll
        path: ${{ github.workspace }}
    - name: Cppcheck
      run: cppcheck --enable=all --force .
    - name: Clang-Tidy
      if: ${{ matrix.cxx == 'clang++' }}
      run: clang-tidy -checks='bugprone-*,-bugprone-reserved-identifier,cert-*,-cert-dcl37-c,-cert-dcl51-cpp,clang-analyzer-*,concurrency-*,misc-*,-misc-no-recursion,modernize-*,-modernize-use-trailing-return-type,performance-*,portability-*,readability-const-return-type,readability-container-*,readability-duplicate-include,readability-else-after-return,readability-make-member-function-cons,readability-non-const-parameter,readability-redundant-*,readability-simplify-*,readability-string-compare,readability-use-*' -header-filter='.*' src/*.cpp -- -Wall -O3 -std=gnu++20
      continue-on-error: true
    - name: ShellCheck
      run: shopt -s globstar; shellcheck -o avoid-nullary-conditions,check-extra-masked-returns,check-set-e-suppressed,deprecate-which,quote-safe-variables,require-double-brackets -s bash **/*.sh
      continue-on-error: true

  Windows:
    name: Windows

    runs-on: windows-latest
    strategy:
      matrix:
        cxx: [g++, clang++]
      fail-fast: false
    env:
      CXX: ${{ matrix.cxx }}
    steps:
    - uses: actions/checkout@v4
    - name: Before Install
      run: |
        echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "CPPFLAGS=-IC:\msys64\mingw64\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "LIBPATH=-LC:\msys64\mingw64\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
    - name: Install
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-gmp mingw-w64-x86_64-opencl-icd
        & $env:CXX --version
    - name: Install Clang
      if: ${{ matrix.cxx == 'clang++' }}
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-clang
        & $env:CXX --version
    - name: Script
      run: | # Cannot use `make exe`, as the OpenCL ICD Loader does not support static linking
        make prpll -O -j $env:NUMBER_OF_PROCESSORS
        cd build-release
        rm *.o
        .\prpll.exe -h
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: win_${{ matrix.cxx }}_prpll
        path: ${{ github.workspace }}
